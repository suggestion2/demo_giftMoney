<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.demo.giftmoney.mapper.CustomerMapper">

    <select id="selectById" resultType="com.demo.giftmoney.domain.Customer" parameterType="java.lang.Integer">
        select * from `customer` where id= #{id} and `valid` = 1
    </select>

    <select id="select" resultType="com.demo.giftmoney.domain.Customer" parameterType="java.util.Map">
        select * from `customer` where `valid` = 1
        <if test="id!=null">
            and `id` = #{id}
        </if>
    </select>

    <select id="selectList" resultType="com.demo.giftmoney.domain.Customer" parameterType="java.util.Map">
        select * from `customer` where `valid` = 1
        <if test="id!=null">

        </if>
        <if test="startIndex != null and pageSize != null">
            limit #{startIndex},#{pageSize}
        </if>
    </select>
    
    <select id="selectItemViewList" resultType="com.demo.giftmoney.response.CustomerListItemView" parameterType="java.util.Map">
        select
        `c`.nickname,
        concat(`c`.province,`c`.city,`c`.county) as area,
        `c`.parentNickname,
        `c`.status,
        count(`g`.id) as giftMoneyCount,
        COALESCE(sum(`g`.amount), 0) as giftMoneyAmount,
        COALESCE(sum(`ac`.sharingPath1Count), 0) as sharingPath1Count,
        COALESCE(sum(`ac`.sharingPath2Count), 0) as sharingPath2Count,
        count(`ac`.id) as directUV,
        COALESCE(sum(`ac`.browseCount), 0) as directPV
        from `customer` `c`
        left join gift_money_record g on `c`.id = `g`.customerId and `g`.valid = 1
        left join article_record `ac` on `c`.id = `ac`.customerId and `ac`.valid = 1
        left join article_record `as` on `c`.id = `as`.sourceCustomerId and `as`.valid = 1
        where `c`.`valid` = 1
        <if test="content!=null">
            `c`.nickname like concat('%',#{content},'%')
        </if>
        group by `c`.id
        <if test="startIndex != null and pageSize != null">
            limit #{startIndex},#{pageSize}
        </if>
    </select>
    
    <select id="selectCount" resultType="java.lang.Integer" parameterType="java.util.Map">
        select count(*) from `customer` where `valid` = 1
        <if test="content!=null">
            nickname like concat('%',#{content},'%')
        </if>
    </select>
    
    <insert id="insert" parameterType="com.demo.giftmoney.domain.Customer" useGeneratedKeys="true" keyProperty="id">
        insert into `customer`
        (
        `nickname`,
        `province`,
        `city`,
        `county`,
        `headimgurl`,
        `openid`,
        `unionid`,
        `parentId`,
        `parentNickname`,
        `articleId`,
        `articleRecordId`,
        `level`,
        `createBy`,
        `updateBy`,
        `status`,
        )
        values
        (
        #{nickname},
        #{province},
        #{city},
        #{county},
        #{headimgurl},
        #{openid},
        #{unionid},
        #{parentId},
        #{parentNickname},
        #{articleId},
        #{articleRecordId},
        #{level},
        #{createBy},
        #{createBy},
        #{status},
        )
    </insert>

    <update id="update" parameterType="com.demo.giftmoney.domain.Customer">
        update `customer` set
        `nickname` = #{nickname},
        `province` = #{province},
        `city` = #{city},
        `county` = #{county},
        `headimgurl` = #{headimgurl},
        `openid` = #{openid},
        `unionid` = #{unionid},
        `parentId` = #{parentId},
        `parentNickname` = #{parentNickname},
        `articleId` = #{articleId},
        `articleRecordId` = #{articleRecordId},
        `level` = #{level},
        `updateBy` = #{updateBy},
        `status` = #{status},
        `updateTime` = now()
        where `id` = #{id}
    </update>
    
    <update id="updateStatus" parameterType="com.demo.giftmoney.domain.Customer">
        update `customer` set
        `updateBy` = #{updateBy},
        `status` = #{status},
        `updateTime` = now()
        where `id` = #{id}
    </update>
    
    <delete id="deleteById" parameterType="java.lang.Integer">
        update `customer` set valid = 0 where `id` = #{id}
    </delete>
</mapper>