<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.demo.giftmoney.mapper.ArticleRecordMapper">

    <select id="selectById" resultType="com.demo.giftmoney.domain.ArticleRecord" parameterType="java.lang.Integer">
        select * from `article_record` where id= #{id} and `valid` = 1
    </select>

    <select id="select" resultType="com.demo.giftmoney.domain.ArticleRecord" parameterType="java.util.Map">
        select * from `article_record` where `valid` = 1
        <if test="id!=null">
            and `id` = #{id}
        </if>
    </select>
    
    <select id="selectViewList" resultType="com.demo.giftmoney.response.ArticleRecordListItemView" parameterType="java.util.Map">
        select
        a.id,
        a.articleId,
        a.customerId,
        a.parentId,
        a.sourceCustomerId,
        a.customerNickname,
        a.sourceCustomerNickname,
        a.degree as `level`,
        a.duration as browseDuration,
        a.browseCount,
        COALESCE(count(a2.id),0) as directUV,
        COALESCE(sum(g.amount),0) as receiveAmount,
        a.sharingPath1Count,
        a.sharingPath2Count,
        from `article_record` a
        left join `article_record` a2 on a.id = a2.parentId
        left join `gift_money_record` g on a.articleId = g.articleId and a.customerId = g.customerId
        where a.`valid` = 1
        and a.`articleId` = #{id}
        order by degree asc
        group by a.customerId
        <if test="startIndex != null and pageSize != null">
            limit #{startIndex},#{pageSize}
        </if>
    </select>
    
    <select id="selectList" resultType="com.demo.giftmoney.domain.ArticleRecord" parameterType="java.util.Map">
        select * from `article_record` where `valid` = 1
        <if test="articleId!=null">
            and `articleId` = #{articleId}
        </if>
        <if test="startIndex != null and pageSize != null">
            limit #{startIndex},#{pageSize}
        </if>
    </select>

    <select id="selectCount" resultType="java.lang.Integer" parameterType="java.util.Map">
        select count(*) from `article_record` where `valid` = 1
        <if test="articleId!=null">
            and `articleId` = #{articleId}
        </if>
    </select>

    <insert id="insert" parameterType="com.demo.giftmoney.domain.ArticleRecord" useGeneratedKeys="true" keyProperty="id">
        insert into `article_record`
        (
        `articleId`,
        `customerId`,
        `customerNickname`,
        <if test="parentId!=null">
        `parentId`,
        `sourceCustomerId`,
        `sourceCustomerNickname`,
        </if>
        `degree`
        )
        values
        (
        #{articleId},
        #{customerId},
        #{customerNickname},
        <if test="parentId!=null">
        #{parentId},
        #{sourceCustomerId},
        #{sourceCustomerNickname},
        </if>
        #{degree}
        )
    </insert>

    <update id="update" parameterType="com.demo.giftmoney.domain.ArticleRecord">
        update `article_record` set
        `articleId` = #{articleId},
        `customerId` = #{customerId},
        `parentId` = #{parentId},
        `sourceCustomerId` = #{sourceCustomerId},
        `customerNickname` = #{customerNickname},
        `sourceCustomerNickname` = #{sourceCustomerNickname},
        `degree` = #{degree},
        `duration` = #{duration},
        `browseCount` = #{browseCount},
        `pageView` = #{pageView},
        `sharing` = #{sharing},
        `sharingPath1Count` = #{sharingPath1Count},
        `sharingPath2Count` = #{sharingPath2Count},
        `updateBy` = #{updateBy},
        `status` = #{status},
        `updateTime` = now()
        where `id` = #{id}
    </update>
    
    <update id="readUpdate" parameterType="java.lang.Integer">
        update `article_record` set
        `browseCount` = `browseCount` + 1,
        `updateTime` = now()
        where `id` = #{id}
    </update>
    
    <update id="share" parameterType="com.demo.giftmoney.mapper.ArticleShareParams">
        update `article_record` set
        `sharing` = 1,
        <if test="path == 1">
            `sharingPath1Count` = `sharingPath1Count` + 1,
        </if>
        <if test="path == 2">
            `sharingPath2Count` = `sharingPath2Count` + 1,
        </if>
        `updateTime` = now()
        where `id` = #{id}
    </update>
    
    <delete id="deleteById" parameterType="java.lang.Integer">
        update `article_record` set valid = 0 where `id` = #{id}
    </delete>
</mapper>